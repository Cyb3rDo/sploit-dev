// Protobuf for workunit classes to talk among themselves.
// Note that some of the int32 fields are actually uint8 in the workunit.

message MFNWorkunitProtobuf {
  message SingleWorkunit {
    optional uint64 workunit_id = 1;
    optional uint64 start_point = 2;
    optional uint64 end_point = 3;
    optional double workunit_requested_timestamp = 4;
    optional double workunit_completed_timestamp = 5;
    optional uint32 client_id = 6;
    optional uint32 is_assigned = 7;
    optional uint32 password_length = 8;
    optional uint32 is_valid = 9;
    optional uint32 flags = 10;
    optional bytes additional_data = 11;
    // Wordlist data
    optional bytes wordlist_data = 12;
    optional bytes wordlist_lengths = 13;
    optional uint32 wordlist_block_length = 14;
    optional uint32 number_words_loaded = 15;
  }
  repeated SingleWorkunit workunits = 1;

  // If set, this requests the client to wait for a few seconds and try again.
  // This will be set if there are no pending WUs, but there are inflight WUs.
  // If they are cancelled, there must be clients to retry.
  optional uint32 workunit_wait = 2;

  // This is set if there are no more workunits of the specified password
  // length (or the general task).  If this is set, the client should return
  // a null workunit to the threads that will trigger a rendezvous.
  optional uint32 no_more_workunits = 3;
}
